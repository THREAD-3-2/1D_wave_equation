function [Ld_ij,Ld_i0j,Ld_ij0,Ld_i0j0] = discreteLag(L,delta_s,delta_t,dsu,dtu)
% Discretizaion of the Lagrangian: the trapezoidal quadrature rule is used
% in time and space.

%---------------------------
% i  --> space node i    j  --> time step j 
% i1 --> space node i+1  j1 --> time step j+1
% i0 --> space node i-1  j0 --> time step j-1
%---------------------------
syms u_ij u_i1j u_ij1 u_i1j1
syms u_i0j u_i0j1  u_ij0 u_i1j0  u_i0j0

Ld_ij = delta_s/2*delta_t/2*...
    (subs(L,[dsu,dtu],[(u_i1j-u_ij)/delta_s,(u_ij1-u_ij)/delta_t])+...
    subs(L,[dsu,dtu],[(u_i1j-u_ij)/delta_s,(u_i1j1-u_i1j)/delta_t])+...
    subs(L,[dsu,dtu],[(u_i1j1-u_ij1)/delta_s,(u_ij1-u_ij)/delta_t])+...
    subs(L,[dsu,dtu],[(u_i1j1-u_ij1)/delta_s,(u_i1j1-u_i1j)/delta_t]));

Ld_i0j = delta_s/2*delta_t/2*...
    (subs(L,[dsu,dtu],[(u_ij-u_i0j)/delta_s,(u_i0j1-u_i0j)/delta_t])+...
    subs(L,[dsu,dtu],[(u_ij-u_i0j)/delta_s,(u_ij1-u_ij)/delta_t])+...
    subs(L,[dsu,dtu],[(u_ij1-u_i0j1)/delta_s,(u_i0j1-u_i0j)/delta_t])+...
    subs(L,[dsu,dtu],[(u_ij1-u_i0j1)/delta_s,(u_ij1-u_ij)/delta_t]));

Ld_ij0 = delta_s/2*delta_t/2*...
    (subs(L,[dsu,dtu],[(u_i1j0-u_ij0)/delta_s,(u_ij-u_ij0)/delta_t])+...
    subs(L,[dsu,dtu],[(u_i1j0-u_ij0)/delta_s,(u_i1j-u_i1j0)/delta_t])+...
    subs(L,[dsu,dtu],[(u_i1j-u_ij)/delta_s,(u_ij-u_ij0)/delta_t])+...
    subs(L,[dsu,dtu],[(u_i1j-u_ij)/delta_s,(u_i1j-u_i1j0)/delta_t]));

Ld_i0j0 = delta_s/2*delta_t/2*...
    (subs(L,[dsu,dtu],[(u_ij0-u_i0j0)/delta_s,(u_i0j-u_i0j0)/delta_t])+...
    subs(L,[dsu,dtu],[(u_ij0-u_i0j0)/delta_s,(u_ij-u_ij0)/delta_t])+...
    subs(L,[dsu,dtu],[(u_ij-u_i0j)/delta_s,(u_i0j-u_i0j0)/delta_t])+...
    subs(L,[dsu,dtu],[(u_ij-u_i0j)/delta_s,(u_ij-u_ij0)/delta_t]));
end

